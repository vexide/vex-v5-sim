[package]
name = "kernel"
version = "0.1.0"
edition = "2021"

[workspace]
members = [".", "example-programs/*"]
resolver = "2"

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
unsafe_op_in_unsafe_fn = "deny"

[workspace.lints.clippy]
missing_const_for_fn = "warn"

[lints]
workspace = true

[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"
debug = true

[dependencies]
heapless = "0.8.0"
# host_call = { path = "../host_call" }
lock_api = "0.4.12"
snafu = { version = "0.8.4", default-features = false, features = [
    "unstable-core-error",
    "rust_1_61",
] }
vex-sdk = "0.12.3"
# vexide core also provides us with an allocator using the symbols from the linker script
vexide-core = { git = "https://github.com/vexide/vexide", branch = "feat/dep-of-sim-kernel", version = "0.3.0", features = [
    "force_rust_libm", # don't want to have to deal with adding in the external libm - we dont even use math functions currently
] }
critical-section = "1.1.2"
printf-compat = { version = "0.1.1", default-features = false }
log = "0.4.22"
